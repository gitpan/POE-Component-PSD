# File:  psd_max.conf 
# Desc:  Configuration file for the Persistent Session Daemon
#
# WARN:  Many of the directives here are not yet supported.
#
# This is the main PSD server configuration file. It contains the
# configuration directives that give the server its instructions.
#
# This uses directives that are based on the Apache configuration file
# which, of course, as everyone knows by now, is based upon the NCSA 
# server configuration files originally by Rob McCool. This file is
# equivalent to Apache server's httpd.conf file with a few additions.
#
# .  SessionPersist { True | False | On | Off | 1 | 0 }
# .  SessionTimeout { seconds }
# .  SessionsLimit  { number }
#
# The SessionsLimit directive may only be set globally, while the
# SessionPersist and SessionTimeout directives can be set either
# globally or within a <Location> section. 
#
# This also allows RELATIVE paths in various directives. This syntax
# is not valid in an Apache config file, and it *always* bugged me.
# Without it, it's a pain to use an old config file with a new Server.
# .  Log Files     - relative to ServerRoot
# .  ScriptAlias   - relative to ServerRoot
# .  AuthUserFile  - relative to ServerRoot
# .  AuthGroupFile - relative to ServerRoot
# .  Alias         - relative to DocumentRoot  (document URL aliasing)
# 
# Not all of the directives in this file are supported yet, but
# the ones included here seem to be a nice subset of things to
# plan on supporting, eventually. A nice place to start would be
# with <VirtualHost> as this would allow running both a plain
# vanilla server and an SSL server from the same daemon process.
#
# See the Apache Web server documentation for details about the other 
# directives used in this file. A full manual with a User's guide,
# reference material and tutorials can be found at the following URL.
# http://httpd.apache.org/

### Section 1: Global Environment

## ServerRoot "/opt/tools/psd"

ServerRoot  ""
PidFile     "data/psd.pid"

Listen 192.168.0.101:19665

#-----------------------------------------------------------------------
# SSL Protocol Switch:
# Enable/Disable SSL for this PSD server daemon.
SSLEngine on

# Server Certificate:
# Point SSLCertificateFile at a PEM encoded certificate.  If
# the certificate is encrypted, then you will be prompted for a
# pass phrase.  Note that a kill -HUP will prompt again.
SSLCertificateFile data/ssl/HOSTNAME.cert.cert

# Server Private Key:
# If the key is not combined with the certificate, use this
# directive to point at the key file.
SSLCertificateKeyFile data/ssl/HOSTNAME.cert.key

#-----------------------------------------------------------------------

### Section 2: 'Main' server configuration
#
User UNAME
Group GNAME

ServerAdmin webmaster@host.domain
ServerName HOSTNAME:19665

DocumentRoot "webdoc"

# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
#
ErrorLog data/psd/error_log

# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
LogLevel warn

# The location and format of the access logfile (Common Logfile Format).
# If you do not define any access logfiles within a <VirtualHost>
# container, they will be logged here.  Contrariwise, if you *do*
# define per-<VirtualHost> access logfiles, transactions will be
# logged therein and *not* in this file.
#
#CustomLog logs/access_log common

# If you prefer a single logfile with access, agent, and referer information
# (Combined Logfile Format) you can use the following directive.
#
CustomLog data/psd/access_log combined

# Aliases: Add here as many aliases as you need (with no limit). The format is 
# Alias fakename realname
#
# Note that if you include a trailing / on fakename then the server will
# require it to be present in the URL.  So "/icons" isn't aliased in this
# example, only "/icons/".  If the fakename is slash-terminated, then the 
# realname must also be slash terminated, and if the fakename omits the 
# trailing slash, the realname must also omit it.
#
# We include the /icons/ alias for FancyIndexed directory listings.  If you
# do not use FancyIndexing, you may comment this out.
#
Alias /icons/ "icons"
Alias /tools/ ""

<Directory "icons">
    Options Indexes MultiViews
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>

# ScriptAlias: This controls which directories contain server scripts.
# ScriptAliases are essentially the same as Aliases, except that
# documents in the realname directory are treated as applications and
# run by the server when requested rather than as documents sent to the client.
# The same rules about trailing "/" apply to ScriptAlias directives as to
# Alias.
#
# Typical for "plain" CGI mode             (Non-ModPerl mode)
ScriptAlias /cgi-bin/tooltest/ "/nethome/http/misc/ptools/webcgi/"
ScriptAlias /cgi-bin/tools/ "/home/http/misc/psd/webcgi/"
ScriptAlias /cgi-bin/cia/   "/home/http/misc/psd/webcgi/cia/"
ScriptAlias /cgi-bin/       "/home/http/misc/psd/apache/cgi-bin/"

# Allow server status reports 
# with the URL of http://servername/server-status
#
<Location /server-status>
    SetHandler server-status
    Order allow,deny
    Allow from all
    #Allow from host1.domain,host2.domain
    Deny from all
</Location>

# Allow remote server configuration reports, with the URL of
#  http://servername/server-info
#
<Location /server-info>
    SetHandler server-info
    Order allow,deny
    #Allow from host1.domain,host2.domain
    Deny from all
</Location>

#-----------------------------------------------------------------------
# Configure persistent sessions for URLs that start with /session
#-----------------------------------------------------------------------

SessionPersist True
SessionTimeout 300
SessionsLimit  99

ScriptAlias /session/admin "webcgi/session/admin.pl"
ScriptAlias /session/demo  "webcgi/session/demo.pl"

<Location /session/admin>
    AuthUserFile  data/acl/passwd
    AuthGroupFile /dev/null
    AuthType Basic
    AuthName "Administrator Session"

    SetHandler cgi-script
    CustomLog  data/psd/admin-log
    #CustomLog data/psd/admin-access_log
    #ErrorLog  data/psd/admin-error_log

    Order allow,deny
    Deny from all
    # require user admin webmaster root 
    require valid-user

    <LimitExcept POST GET>
    </LimitExcept>
</Location>

<Location /session/demo>
    #AuthUserFile  data/acl/passwd
    #AuthGroupFile /dev/null
    AuthType Custom
    AuthName "Demonstration Session"

    SetHandler cgi-script
    CustomLog  data/psd/demo-%user%-log
    #CustomLog data/psd/demo-%user%-access_log
    #ErrorLog  data/psd/demo-%user%-error_log

    Order allow,deny
    Deny from all
    # require user train admin webmaster root 
    require valid-user

    <LimitExcept POST GET>
	Deny from all
    </LimitExcept>
</Location>

### Section 3: Virtual Hosts
###
###  [ not yet supported ]
###
